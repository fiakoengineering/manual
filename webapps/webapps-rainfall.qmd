---
pagetitle: "Artikel: Aplikasi Pengolahan Data Hujan"
title: Aplikasi Pengolahan Data Hujan
subtitle: |
    Pengembangan tiga aplikasi web pengolahan data hujan menggunakan _python_

title-block-style: default

toc: true
toc-depth: 3
toc-location: right
sidebar: side-webapps
page-layout: article
lang: id

author: 
    - name: Taruma Sakti Megariansyah
      url: https://taruma.my.id
      affiliation: fiakodev, PT. FIAKO Enjiniring Indonesia
      affiliation-url: https://dev.fiako.engineering

# language: ../language_id.yml

citation:
    url: https://manual.fiako.engineering/rainfall-apps.html
    language: id
    type: article
    license: CC-BY-NC-SA 4.0
    issued: 2022-11-22

license: CC-BY-NC-SA 4.0

date: 2022-11-22
# date-modified: 2022-11-20
date-format: full

abstract: |
    Dalam analisis hidrologi, pengolahan data hujan merupakan proses yang penting. 
    Dengan membesarnya penyimpanan data dan permintaan pengolahan data yang lebih cepat, 
    diperlukan solusi teknologi yang dapat menjawab tantangan tersebut.
    Dikembangkan tiga aplikasi pengolahan data hujan berbasis web yang mampu mempersingkat proses pengerjaan pengolahan data hujan
    dan mengurangi kekeliruan yang terjadi. 
    Aplikasi yang telah dikembangkan yaitu Rainfall Stations Explorer, 
    Rainfall Data Explorer, dan Frequency Analysis. 

callout-appearance: simple
number-sections: true
fig-responsive: true
tbl-cap-location: top

format:
  html: 
    css: article.css

---

::: {.callout-important}
## Mengutip Artikel

Untuk mensitasi artikel ini dalam makalah formal, disarankan mensitasi makalah "Pengembangan Aplikasi Pengolahan Data Hujan Berbasis Web" dari prosiding PIT HATHI ke-39. Jika bukan untuk makalah formal, dapat menggunakan sitasi yang tersedia [di akhir halaman](#citation) (mensitasi halaman ini).  
:::

::: {.callout-note}
## Perbedaan Artikel dengan Makalah PIT HATHI ke-39

Ketiga aplikasi ini telah dipresentasikan di kegiatan Pertemuan Ilmiah Tahunan (PIT) Himpunan Ahli Teknik Hidrolik Indonesia (HATHI) ke-39 yang diadakan pada tanggal 29 Oktober 2022 dalam bentuk makalah berjudul "Pengembangan Aplikasi Pengolahan Data Hujan Berbasis Web". 

Artikel ini ditujukan sebagai penjelasan teknis dengan penyampaian informal dan bukan sebagai pengganti makalah yang dipublikasikan di PIT HATHI ke-39. Harapannya, artikel ini memudahkan kontributor dan _developer_ untuk berkontribusi maupun mengembangkan aplikasi yang serupa. 

Artikel ini juga dapat dikembangkan seiringnya waktu, sesuai perkembangan aplikasi ataupun teknologi yang digunakan. 
:::

## Aplikasi Pengolahan Data Hujan {#sec-web-apps}

**Aplikasi Pengolahan Data Hujan** merupakan tiga aplikasi web yang dapat membantu saat pengolahan data hujan berupa penyimpanan data hingga analisis frekuensi. Aplikasi ini menerapkan ilmu hidrologi yang digunakan di Indonesia^[Aplikasi ini bergantung pada paket [`hidrokit`](https://github.com/hidrokit/hidrokit) yang menerapkan ilmu hidrologi dalam bentuk python.]. 

### _Rainfall Stations Explorer_ {#sec-fiako-stations}

_Rainfall Stations Explorer_ atau `fiako-stations` adalah aplikasi web yang dapat digunakan untuk mengeksplorasi data hujan harian yang tersedia di _database_. Dari aplikasi ini dapat memperoleh informasi kelengkapan data dan akusisi data hujan harian dengan mudah dan cepat. "Demo" disini diartikan menggunakan dataset publik atau acak dan hanya berfungsi untuk mendemonstrasikan fungsi aplikasi. Demonstrasi aplikasi bisa melihat @fig-demo-fiako-stations dan tabel informasi di @tbl-info-fiako-stations.

::: {.column-margin}

![_Rainfall Stations Explorer_<br>(`fiako-stations`)](img/manual-rainfall-apps-fiako-stations.gif){#fig-demo-fiako-stations}

:::

|
:- | :-
Judul Aplikasi | _Rainfall Stations Explorer_
Kode Aplikasi | `fiako-stations`
Versi Aplikasi | `v3.1.0` (15 November 2022)
Alamat Aplikasi | [demo-fiako-stations.herokuapp.com](https://demo-fiako-stations.herokuapp.com)
_Source Code_ | [fiakoenjiniring/demo-stations](https://github.com/fiakoenjiniring/demo-stations)

: Tabel informasi `fiako-stations` {#tbl-info-fiako-stations}


### _Rainfall Data Explorer_ {#sec-hidrokit-rainfall}

_Rainfall Data Explorer_ atau `hidrokit-rainfall` adalah aplikasi web yang dapat digunakan untuk menganalisis data hujan harian. Dari aplikasi ini dapat memperoleh informasi hujan maksimum, total hujan, hari hujan, hari kering, dan kejadian hujan maksimum setiap periode yang ditentukannya dengan presentasi menggunakan visualisasi data. Grafik kumulatif tahunan dan konsistensi (kurva massa ganda) juga ditambahkan sejak versi v1.1.x. Demonstrasi aplikasi bisa melihat @fig-demo-hidrokit-rainfall dan tabel informasi di @tbl-info-hidrokit-rainfall.

::: {.column-margin}

![_Rainfall Data Explorer_<br>(`hidrokit-rainfall`)](img/manual-rainfall-apps-hidrokit-rainfall.gif){#fig-demo-hidrokit-rainfall}

:::

|
:- | :-
Judul Aplikasi | _Rainfall Data Explorer_
Kode Aplikasi | `hidrokit-rainfall`
Versi Aplikasi | `v1.3.0` (15 November 2022)
Alamat Aplikasi | [hidrokit-rainfall.herokuapp.com](https://hidrokit-rainfall.herokuapp.com)
_Source Code_ | [fiakoenjiniring/rainfall](https://github.com/fiakoenjiniring/rainfall)

: Tabel informasi `hidrokit-rainfall` {#tbl-info-hidrokit-rainfall}

### _Frequency Analysis_ {#sec-fiako-anfrek}

_Frequency Analysis_ (sebelumnya dikenal _Frequency Analysis in Hydrology_) atau `fiako-anfrek` adalah aplikasi web yang dapat digunakan untuk menghitung parameter statistik, jenis sebarannya (distribusi), analisis frekuensi, dan uji kecocokan distribusi. Output aplikasi ini berupa visualisasi hasil perhitungan dan tabel/teks berupa .csv/.txt. Demonstrasi aplikasi bisa melihat @fig-demo-fiako-anfrek dan tabel informasi di @tbl-info-fiako-anfrek.

::: {.column-margin}

![_Frequency Analysis_<br>(`fiako-anfrek`)](img/manual-rainfall-apps-fiako-anfrek.gif){#fig-demo-fiako-anfrek}

:::

|
:- | :-
Judul Aplikasi | _Frequency Analysis_
Kode Aplikasi | `fiako-anfrek`
Versi Aplikasi | `v1.1.0` (15 November 2022)
Alamat Aplikasi | [fiako-anfrek.herokuapp.com](https://fiako-anfrek.herokuapp.com)
_Source Code_ | [fiakoenjiniring/anfrek](https://github.com/fiakoenjiniring/anfrek)

: Tabel informasi `fiako-anfrek` {#tbl-info-fiako-anfrek}

## Pengembangan Aplikasi {#sec-development-apps}

Pengembangan aplikasi ini tidak mengikuti _template_ yang sudah tersedia sehingga penulisan kode ataupun strukturnya yang dihasilkan dari aplikasi ini masih perlu dievaluasi kembali. Dalam bab ini, akan dibahas beberapa informasi mengenai _development_ aplikasi sehingga memudahkan _developer_ membaca _source code_ atau mengembangkannya. 

### _Dependencies_ {#sec-dependencies-apps}

Pengembangan aplikasi ini dibangun menggunakan bahasa pemrograman _Python_. Berikut daftar paket yang digunakan dalam pengembangan aplikasi di @tbl-dependencies. 

::: {.column-body-outset}

_Package/Library_ | `fiako-stations` | `hidrokit-rainfall` | `fiako-anfrek`
:- | :-: | :-: | :-:
`python==3.9.13` | ✔️ | ✔️ | ✔️
`pandas==1.5.1` | ✔️ | ✔️ | ✔️
`dash==2.7.0` | ✔️ | ✔️ | ✔️
`dash-bootstrap-components==1.2.1` | ✔️ | ✔️ | ✔️
`dash-bootstrap-templates==1.0.7` | ✔️ | ✔️ | ✔️
`python-box==6.1.0` | ✔️ | ✔️ | ✔️
`pyyaml==6.0` | ✔️ | ✔️ | ✔️
`dash-auth==1.4.1`[^dash-auth] | ✔️ | ❌ | ❌
`geopy==2.3.0` | ✔️ | ❌ | ❌
`pytables==3.7.0` | ✔️ | ❌ | ❌
`hidrokit==0.4.1` | ❌ | ✔️ | ✔️
`statmodels==0.13.5` | ❌ | ✔️ | ❌
`scipy==1.8`[^scipy] | ❌ | ❌ | ✔️
environment.yml (conda) | [env](https://github.com/fiakoenjiniring/demo-stations/blob/main/environment.yml) | [env](https://github.com/fiakoenjiniring/rainfall/blob/main/environment.yml) | [env](https://github.com/fiakoenjiniring/anfrek/blob/main/environment.yml)
requirements.txt (venv) | [env](https://github.com/fiakoenjiniring/demo-stations/blob/main/requirements.txt) | [env](https://github.com/fiakoenjiniring/rainfall/blob/main/requirements.txt) | [env](https://github.com/fiakoenjiniring/anfrek/blob/main/requirements.txt)

: _Packages_ yang digunakan dalam pengembangan aplikasi pengolahan data hujan {#tbl-dependencies}

:::

[^dash-auth]: `dash-auth` hanya digunakan untuk aplikasi `fiako-stations` internal. 
[^scipy]: versi `scipy` **harus** menggunakan versi `1.8.x`. Hal ini terkait fungsi distribusi pearson. Untuk lebih jelasnya bisa membaca isu [hidrokit/hidrokit#228](https://github.com/hidrokit/hidrokit/issues/228). 

Pengembangan aplikasi ini menggunakan sistem operasi Windows 11 dan [miniconda]. Environment untuk setiap aplikasi sudah tersedia di repository dengan nama file `environment.yml` (conda) atau `requirements.txt` (venv). Beberapa _package/library_ tambahan dalam _development_ antara lain `black`, `flake8` untuk _code-formatting_ atau _linting_. Untuk pengembangan visualisasinya menggunakan [fitur _notebook_](https://code.visualstudio.com/docs/datascience/jupyter-notebooks) yang tersedia di VSCode. Alternatifnya menggunakan [Google Colab], hanya perlu diperhatikan untuk versi setiap _library_ yang digunakan[^versi-colab].

[miniconda]: https://docs.conda.io/en/latest/miniconda.html
[Visual Studio Code]: https://code.visualstudio.com/
[Google Colab]: https://colab.research.google.com/
[^versi-colab]: Per tanggal 18 November 2022, [Google Colab] masih menggunakan python versi `3.7`.

### Struktur Aplikasi {#sec-structure-apps}

Aplikasi ini terdiri beberapa file atau komponen yang saling berhubungan. Pada dasarnya aplikasi berpusat pada file `app.py` sebagai file utama menjalankannya aplikasi. Daftar file yang digunakan dalam aplikasi dapat dilihat pada @tbl-str-apps.

::: {.column-page}

_Filename_ | Kegunaan | Catatan
:- | :- | :-
`app_config.yml` | Konfigurasi aplikasi dalam bentuk `.yml` | -
`pyconfig.py` | Mengubah `app_config.yml` menjadi objek `appConfig` | Hanya digunakan untuk membaca `app_config.yml`
`pytemplate.py` | Konfigurasi _template_ untuk _interactive plot_ `plotly` | -
`pyfigure.py` | Membangkitkan objek `figure` grafik interaktif | .
`pylayoutfunc.py` | Kumpulan fungsi terkait tampilan/_layout_ aplikasi | .
`pylayout.py` | File utama untuk menyimpan _layout_ aplikasi  | .
`pyfunc.py` | Kumpulan fungsi umum yang digunakan dalam aplikasi | .
`app.py` | File utama aplikasi | Seluruh _callback_ diatur dalam file ini

: Daftar _file_ yang digunakan dalam menjalankan aplikasi {#tbl-str-apps tbl-colwidths="[20,50,30]"}

:::

Hubungan antara file bisa dilihat pada @fig-structure-apps. Struktur aplikasi ini tidak begitu ketat sehingga beberapa file yang seharusnya tidak digunakan di `app.py` tetap dipanggil. Struktur ini hanya memudahkan _developer_ untuk menyusun fitur ataupun menelusuri fungsi. Dengan struktur tersebut, harapannya memudahkan untuk _developer_ atau kontributor untuk berkontribusi ataupun mengembangkan. 

::: {.column-screen-inset .text-center}

```{mermaid}
%%| label: fig-structure-apps
%%| fig-cap: Gambaran struktur aplikasi[^str-apps]
%%{ init: { 'flowchart': { 'curve': 'bump' } } }%%
flowchart RL
    pylayout[pylayout.py]
    pylayoutfunc[pylayoutfunc.py]
    pyfigure[pyfigure.py]
    pytemplate[pytemplate.py]
    pyfunc[pyfunc.py]
    pyconfig[pyconfig.py]
    appconfig[app_config.yml]
    app[app.py]

    appconfig -.- pyconfig

    pyconfig -.-> pylayout
    pyconfig -.-> pyfigure
    pyconfig -.-> pytemplate
    pyconfig -.-> pyfunc
    
    pytemplate -.-> pyfigure
    pytemplate -.-> pylayoutfunc
    
    
    pylayoutfunc -.-> pylayout
    pyfigure -.-> pylayout
    
    pyconfig ====> app
    pylayout ====> app
    pyfunc ====> app
```

:::

[^str-apps]: Terdapat perbedaan antara artikel ini dengan makalah PIT HATHI ke-39. Gambar ini merupakan gambar terbaru yang telah dikoreksi. 

Struktur diatas masih bisa diperbaiki atau dikembangkan lagi seperti memisahkan _callback_ ke file tersendiri. 

### Pengujian {#sec-testing-apps}

Aplikasi ini tidak memiliki pengujian seperti _unit test_. Hal ini dikarenakan untuk pengujian ini memakan waktu pengembangan aplikasi. Pada `Dash` versi `v2.6`, fitur [_unit tests_](https://dash.plotly.com/testing#unit-tests) sudah ditambahkan. Aplikasi ini tetap melalui tahap pengujian, hanya saja dilakukan secara manual dan mandiri. 

Aplikasi pengolahan data hujan hanya fokus pada visualisasi. Jadi, beberapa fitur analisis itu tergantung _package/library_ yang digunakan pada aplikasinya. Untuk `fiako-stations` tidak ada proses analisis sehingga pengujian hanya sebatas visualisasi dan interaktif antar komponen. Pada `hidrokit-rainfall` dan `fiako-anfrek` bergantung dengan paket [`hidrokit`], sehingga untuk hasil analisis akan bergantung pengujian pada paket tersebut. Proses pengujian manual ini dapat diilustrasikan pada @fig-testing-apps.

::: {.column-screen-inset .text-center}

```{mermaid}
%%| label: fig-testing-apps
%%| fig-cap: Gambaran pengujian aplikasi secara manual
%%{ init: { 'flowchart': { 'curve': 'bump'}, 'theme': 'neutral' } }%%
flowchart LR
    pengujian[[Pengujian]]
    pengembangan[[Pengembangan]]
    publikasi[[Publikasi]]
    interaksi[Interaksi Komponen]
    intended{Interaksi Sesuai Ekspetasi?}
    visualisasi[Visualisasi]
    output["Output (CSV / TXT)"]

    intended == sesuai ekspetasi ==> publikasi
    pengujian ==> interaksi
    interaksi ==> intended
    interaksi -.- visualisasi
    interaksi -.- output
    pengembangan -.-> pengujian
    visualisasi -.-> intended
    output -.-> intended
    intended -. tidak sesuai ekspetasi .-> pengembangan

```

:::

### _Open-Source_ dan GitHub {#sec-opensource}

Setelah hasil aplikasi memuaskan dan dapat digunakan, aplikasi dirilis dalam bentuk proyek _open-source_ di GitHub. Ketiga aplikasi menggunakan [lisensi MIT](https://opensource.org/licenses/MIT). Karena proyek akan diserahkan ke komunitas, maka menyusun struktur dan mengikuti tata cara penulisan kode perlu diperhatikan. Alur publikasi seperti pada gambaran @fig-publish-apps. 

::: {.text-center}

```{mermaid}
%%| label: fig-publish-apps
%%| fig-cap: Gambaran publikasi dan rilis aplikasi
%%{ init: { 'flowchart': { 'curve': 'bump'}, 'theme': 'neutral' } }%%
flowchart TD
    publikasi[[Publikasi]]
    pengujian[[Pengujian]]
    refactor["Refactor & Dokumentasi"]
    publish["Publikasi dan Rilis di GitHub"]
    osdev["Open Source Software Development"]
    deploy["Deployment"]
    maintain["Pengelolaan / Maintenance"]

    publikasi ==> refactor
    refactor ==> publish
    refactor -.-> pengujian
    pengujian -.-> publikasi
    publish == "Tanggung Jawab Komunitas" ====> osdev
    publish -.-> deploy
    deploy -.-> maintain
    publish -.-> maintain
    maintain -.-> osdev

```

:::

Sesuai ilustrasi diatas, aplikasi yang telah dipublikasikan diserahkan ke komunitas untuk mengembangkannya lebih lanjut. Dengan lisensi MIT, aplikasi juga bisa dimodifikasi dan dirilis dengan lisensi yang berbeda^[Harap membaca lisensi masing-masing aplikasi untuk lebih jelasnya.]. Pada tahap terakhir mengacu pada pengembangan dengan menggunakan [_Open Source Software Development_](https://en.wikipedia.org/wiki/Open-source_software_development).


## Fitur Aplikasi {#sec-feature-apps}

Tiga aplikasi yang telah dipublikasi memiliki fitur-fitur yang dapat membantu pekerjaan analisis hidrologi dari penyimpanan/pengambilan data hujan hingga analisis frekuensi. 

### _Rainfall Stations Explorer_ {#sec-feat-fiako-stations}

Fitur aplikasi _Rainfall Stations Explorer_ (`fiako-stations`) antara lain:

1. Memudahkan **eksplorasi stasiun hujan** yang dimiliki.
2. Mengetahui **informasi stasiun terdekat** terhadap titik lokasi tinjauan.
3. Melihat secara sekilas **kelengkapan data** dengan _heatmap_.
4. **Memilih stasiun dan periode** yang akan digunakan untuk analisis.
5. **Visualisasi & download** data hujan harian dengan periode yang telah dipilih.

### _Rainfall Data Explorer_ {#sec-feat-hidrokit-rainfall}

Fitur aplikasi _Rainfall Data Explorer_ (`hidrokit-rainfall`) antara lain:

1. **Eksplorasi data hujan** dalam bentuk _table_. Termasuk melakukan modifikasi dan _filter_. 
2. **Visualisasi data hujan** untuk setiap stasiun dalam bentuk _line_ atau _bar_ (jika datasetnya kecil). 
3. **Analisis data hujan** yang mengeluarkan rekapitulasi/ringkasan untuk tiga periode yaitu _biweekly_, _monthly_, dan _yearly_. 
4. Mempresentasikan hasil analisis dalam bentuk **visualisasi analisis data hujan** berupa _bar plot_ dan _bubble chart_.

### _Frequency Analysis_ {#sec-feat-fiako-anfrek}

Fitur aplikasi _Frequency Analysis_ (`fiako-anfrek`) antara lain:

1. **Eksplorasi data deret waktu** (_time series_) dengan visualisasi _bar_ dan _bubble_.
2. Menghitung **parameter statistik dan _outlier_** beserta visualisasinya.
3. Menghitung **analisis frekuensi** setiap distribusi dengan periode ulang beserta visualisasinya.
4. Melakukan **uji kecocokan distribusi** _Chi-Square_ dan _Kolmogorov-Smirnov_ beserta visualisasinya.

## Penggunaan Aplikasi

## Kekurangan Aplikasi

## Berkontribusi


[`hidrokit`]: https://github.com/hidrokit/hidrokit